-- tree-sitter によるシンタックスハイライトを行わないファイルタイプ
local disable_highlights = {
  ['sql'] = true,
  ['php'] = true,
}

require('nvim-treesitter.configs').setup({
  ensure_installed = {
    'bash',
    'blade',
    'c',
    'c_sharp',
    'clojure',
    'cmake',
    'comment',
    'commonlisp',
    'cpp',
    'css',
    'csv',
    'dart',
    'diff',
    'dockerfile',
    'dot',
    'doxygen',
    'editorconfig',
    'elixir',
    'elm',
    'erlang',
    'git_config',
    'git_rebase',
    'gitattributes',
    'gitcommit',
    'gitignore',
    'go',
    'gomod',
    'gosum',
    'gotmpl',
    'gpg',
    'graphql',
    'groovy',
    'haskell',
    'hcl',
    'helm',
    'html',
    'http',
    'ini',
    'java',
    'javadoc',
    'javascript',
    'jinja',
    'jinja_inline',
    'jq',
    'jsdoc',
    'json',
    'json5',
    'jsonc',
    'julia',
    'kotlin',
    'llvm',
    'lua',
    'luadoc',
    'luap',
    'luau',
    'make',
    'markdown',
    'markdown_inline',
    'mermaid',
    'nginx',
    'nim',
    'objc',
    'perl',
    'php',
    'phpdoc',
    'po',
    'pod',
    'python',
    'query',
    'regex',
    'ruby',
    'rust',
    'scala',
    'scss',
    'slim',
    'sql',
    'ssh_config',
    'svelte',
    'terraform',
    'tmux',
    'toml',
    'tsv',
    'tsx',
    'twig',
    'typescript',
    'typespec',
    'vim',
    'vimdoc',
    'vue',
    'xml',
    'yaml',
    'zig',
  },
  ignore_install = { 'ipkg' },
  highlight = {
    enable = true,
    disable = function(lang, buf)
      if disable_highlights[lang] then
        return true
      end

      -- 100 KB 以上のファイルでは tree-sitter によるシンタックスハイライトを行わない
      local max_filesize = 100 * 1024
      local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
      if ok and stats and stats.size > max_filesize then
        return true
      end
    end,
  },
  indent = {
    enable = true,
  },
  autotag = {
    enable = true,
  },
})

local parser_config = require('nvim-treesitter.parsers').get_parser_configs()
parser_config.tsx.filetype_to_parsername = {
  'javascript',
  'typescript.tsx',
}
