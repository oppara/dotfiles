#-----------------------------------------------------------------------------
# tmux show-options -g
# tmux list-keys
# tmux list-keys -Tcopy-mode-vi
#-----------------------------------------------------------------------------

## Basic Setting # {{{1

set -g default-terminal "screen-256color"

set-option -g default-command "type reattach-to-user-namespace >/dev/null 2>&1 && reattach-to-user-namespace -l $SHELL || $SHELL"
# set-option -g display-time 2000

set-option -g escape-time 10

## define prefix-key
unbind-key C-Space
set-option -g prefix C-Space
bind-key C-Space send-prefix
unbind-key C-b

## change paste buffer
set-option -g buffer-limit 20

## change buffer log
set-option -g history-limit 40000

## message text
set-option -g message-bg colour0
set-option -g message-fg colour166 #orange
set-option -g message-attr bright

## reload
unbind-key C-r
bind-key C-r source-file $HOME/.tmux.conf\; display-message "Reload Config!!"


## Copy Mode # {{{2

set-window-option -g mode-keys vi

unbind-key ^"["
bind-key -r ^"[" copy-mode
unbind-key ^]
bind-key -r ^] paste-buffer

bind-key C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

unbind-key -Tcopy-mode-vi Enter
unbind-key -Tcopy-mode-vi Space
unbind-key -Tcopy-mode-vi v
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi V send -X select-line
bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi Space send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


## Window Key Bindings # {{{2

unbind-key ^t
bind-key C-Space last-window

unbind-key !
bind-key Space choose-window

## rename window
unbind-key A
bind-key A command-prompt "rename-window %%"

## create new window
bind-key c new-window -c "#{pane_current_path}"
bind-key C-n new-window -c "#{pane_current_path}"

## kill window
unbind-key "\\"
unbind-key C-q
bind-key C-q confirm-before kill-window


## Pane Key Bindings # {{{2

## split windows like vim
bind-key C-s split-window -v -c "#{pane_current_path}"
bind-key C-v split-window -h -c "#{pane_current_path}"

## move around panes like vim
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

## resize panes
bind-key C-h resize-pane -L 5
bind-key C-l resize-pane -R 5
bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5

## swap pane
bind-key > swap-pane -D
bind-key < swap-pane -U

## break pane
unbind-key C-o
bind-key C-o break-pane

## join-pane: the format is session:window.pane
bind-key f command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key t command-prompt -p "send pane to:"   "join-pane -t '%%'"

## kill pane
unbind-key C-w
bind-key C-w confirm-before kill-pane



# Pane Settings  # {{{1

set-window-option -g pane-base-index 1

## pane border and colors
set-option -g pane-border-fg colour235
set-option -g pane-border-bg default
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg default

## pane number display
set-option -g display-panes-active-colour colour64 #green
set-option -g display-panes-colour colour166 #orange



# Status Settings  # {{{1

set-option -g status-position top
set-option -g status on
set-option -g status-interval 1

## status bar color
set-option -g status-style 'fg=colour232,bg=colour244'

## current window status
set-window-option -g window-status-current-format ' #I:#W '
set-window-option -g window-status-current-style 'fg=colour250,bg=colour232,reverse'
set-window-option -g window-status-current-style 'fg=colour232,bg=colour250,reverse'
set-window-option -g window-status-format ' #I:#W '
set-window-option -g window-status-style 'fg=colour232'

## status left
set-option -g status-left-length 60
# set-option -g status-left '#[fg=colour248,bg=colour232]⣿ ❐ #h ⡇#[default]'
set-option -g status-left '#[fg=colour232]⣿ ❐ #h ⡇#[default]'

## status right
set-option -g status-right-length 60
# set-option -g status-right '#[fg=colour248,bg=colour232]⡇#{selected_input_source}⡇%Y-%m-%d(%a) %H:%M'
set-option -g status-right '#[fg=colour232]⡇#{selected_input_source}⡇%Y-%m-%d(%a) %H:%M '



# Misc # {{{1

## clock
set-window-option -g clock-mode-colour colour64 #green

## man
bind-key / command-prompt "split-window -p 60 'exec man %%'"

## quick memo
unbind-key m
bind-key m split-window -v -p 40 "$EDITOR ~/tmp/memo.txt"

## quickly invoke any command
unbind-key a
bind-key a command-prompt -p "Enter command:" "split-window -p 30 '%% | less -R'"



# Tmux Plugin Manager # {{{1
#-----------------------------------------------------------------------------
# % git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#-----------------------------------------------------------------------------

set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'oppara/tmux-osx-selected-input-source'

# load plugins
if-shell "[ -x ${HOME}/.tmux/plugins/tpm/tpm ]" "run-shell ${HOME}/.tmux/plugins/tpm/tpm"


# vim: ft=conf fdm=marker
