# change default escape from ctrl-a to backtick
# default was ^Aa
escape ^Tt

# iTerm上で起動時にウインドウサイズが変化するのを抑制
termcapinfo xterm-256color 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# http://pjkh.com/articles/2008/07/09/osx-iterm-screen-vim-256-colors/
# terminfo and termcap for nice 256 color terminal
# allow bold colors - necessary for some reason
attrcolor b ".I"
# tell screen how to set colors. AB = background, AF=foreground
termcapinfo xterm "Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm"
termcapinfo xterm-color "Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm"
termcapinfo screen-bce "Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm"
# erase background with current bg color
defbce "on"

altscreen on
startup_message off
vbell off
autodetach on
defflow off
nethack on
defscrollback 5000

# don't remove windows from the window list as soon as window process exits.
zombie kr # k: destory window, r: resurrect window


hardstatus on
hardstatus alwayslastline '%{= .W}%H%{-} %L=%-w%45L>%{=u } %n %t %{-}%+w %-17<%=%m/%d %02c:%s'
caption always '%?%F%{= KW}%:%{= Kk}%?%f%?%P [[copy/paste mode]] %:%? %t %= %3n (%e)'

hardcopydir ~/.screen/hardcopy
bufferfile ~/.screen/screen-exchange

bindkey -m ' ' eval 'stuff \040' 'writebuf' 'exec sh -c "/usr/bin/pbcopy < ~/.screen/screen-exchange"'
bindkey -m Y   eval 'stuff Y'    'writebuf' 'exec sh -c "/usr/bin/pbcopy < ~/.screen/screen-exchange"'
bindkey -m W   eval 'stuff W'    'writebuf' 'exec sh -c "/usr/bin/pbcopy < ~/.screen/screen-exchange"'

bind \ kill
bind s # reset s key
bind ' ' windowlist -b

# http://yskwkzhr.blogspot.com/2011/12/quickly-switch-gnu-screen-encoding.html
# encoding aliases
bind ^E eval 'command -c sencoding' 'echo "switch window encoding to: [u]tf8 [e]ucjp [s]jis / with env [U]tf8 [E]ucjp [S]jis"'
bind -c sencoding ^U eval 'encoding utf8'  'info'
bind -c sencoding u  eval 'encoding utf8'  'info'
bind -c sencoding ^E eval 'encoding eucjp' 'info'
bind -c sencoding e  eval 'encoding eucjp' 'info'
bind -c sencoding ^S eval 'encoding sjis'  'info'
bind -c sencoding s  eval 'encoding sjis'  'info'
bind -c sencoding U  eval 'encoding utf8'  '!!!echo "export LANG=ja_JP.UTF-8"' 'info'
bind -c sencoding E  eval 'encoding eucjp' '!!!echo "export LANG=ja_JP.eucJP"' 'info'
bind -c sencoding S  eval 'encoding sjis'  '!!!echo "export LANG=ja_JP.sjis"'  'info'


# resion focus(like vi)
bind j focus down
bind k focus up
bind h focus top
bind l focus bottom


# # continuous resion resize.
# # orverride default `r'(wrap) mapping.
bind ^R eval 'command -c cresize' 'echo "Resize region:"'
bind -c cresize j eval 'resize +1' 'echo "Resize region:"' 'command -c cresize'
bind -c cresize k eval 'resize -1' 'echo "Resize region:"' 'command -c cresize'
bind -c cresize = eval 'resize =' 'echo "Resize region:"' 'command -c cresize'
bind -c cresize n eval 'resize min' 'echo "Resize region:"' 'command -c cresize'
bind -c cresize x eval 'resize max' 'echo "Resize region:"' 'command -c cresize'
bind -c cresize s split
bind -c cresize ^S split
bind -c cresize v split -v
bind -c cresize ^V split -v
bind -c cresize o only
bind -c cresize ^O only
bind -c cresize r remove
bind -c cresize ^R remove

# vim: ft=screen
