export LANGUAGE="en_US.UTF-8"
export LANG="${LANGUAGE}"
export LC_ALL="${LANGUAGE}"
export LC_CTYPE="${LANGUAGE}"

wcwidth="/opt/homebrew/lib/wcwidth-cjk.so"
test -e "${wcwidth}" && export LD_PRELOAD="${wcwidth}"
unset wcwidth

export BLOCKSIZE=k
export TZ=JST-9

export HISTSIZE=100000
export SAVEHIST=${HISTSIZE}
export HISTFILESIZE=${HISTSIZE}
export HISTCONTROL=ignoredups
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

export EDITOR=vim
export CVSEDITOR="${EDITOR}"
export SVN_EDITOR="${EDITOR}"
export GIT_EDITOR="${EDITOR}"


export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_INSTALL_CLEANUP=1


if which lv >/dev/null; then
    export PAGER=lv
    export MANPAGER=lv
    export LV="-c -Sh1;34 -Su1;4;32 -Ss7;37;1;33"
else
    export PAGER=less
    export MANPAGER="less -RX"
fi

export LESS="--no-init --shift 4 --LONG-PROMPT --RAW-CONTROL-CHARS  --quit-if-one-screen"
export LESSCHARSET=utf-8
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[33;7;40m'     # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;32;5;146m' # begin underline


export GREP_OPTIONS="--binary-files=without-match --color=auto"
export GREP_COLOR="1;31"

export GIT_AUTHOR_NAME="oppara"
export GIT_AUTHOR_EMAIL="oppara@oppara.tv"
export GIT_COMMITTER_NAME="${GIT_AUTHOR_NAME}"
export GIT_COMMITTER_EMAIL="${GIT_AUTHOR_EMAIL}"


## go
golibexec="/opt/homebrew/opt/go/libexec"
if [ -d ${golibexec} ]; then
    PATH="$PATH:${golibexec}/bin"
    export GOPATH="${HOME}"
    export GOROOT=${golibexec}
fi
unset golibexec


## blog
## https://d.oppara.tv/posts/2022/03/hugo-blog-tool/
export BLOG_ROOT="${HOME}/src/github.com/oppara/d.oppara.tv"
export BLOG_POST_DIR=`date +"content/posts/%Y/%m"`

## To use pbcopy/pbpaste with UTF-8 encoding.
## http://kana.github.com/config/vim/fakeclip.html#fakeclip-multibyte-on-mac
## http://developer.apple.com/library/mac/#documentation/CoreFoundation/Reference/CFStringRef/Reference/reference.html
export __CF_USER_TEXT_ENCODING=${__CF_USER_TEXT_ENCODING/:*:/:0x08000100:}

# vim: ft=sh fdm=marker

