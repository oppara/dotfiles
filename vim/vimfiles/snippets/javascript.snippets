# Prototype
snippet pt
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
	  ${4:// body...}
	};
# Function
snippet fn function
	function ${1:function_name} (${2:argument}) {
	  ${3:// body...}
	}
snippet vf var hoge = function
	var ${1:function_name} = function(${2:argument}) {
	  ${3:// body...}
	};
# Anonymous Function
snippet f anonymous
	function(${1}) {${2}};
# Object Method
snippet :f Object method
	${1:method_name}: function(${2:attribute}) {
	  ${4}
	}${3:,}

# if
snippet if
	if (${1:true}) {${2}};
# if ... else
snippet ife
	if (${1:true}) {
	 ${2}}
	else {
      ${3}
   };

# tertiary conditional
snippet ?: 
	${1:/* condition */} ? ${2:a} : ${3:b}

# switch
snippet sw
	switch(${1:expression}) {
	  case '${3:case}':
	    ${4:// code}
	    break;
	  ${5}
	  default:
	    ${2:// code}
	}
# case
snippet ca
	case '${1:case}':
	  ${2:// code}
	  break;
	${3}

# for (...) {...}
snippet fo
	for (var ${2:i} = 0; $2 < ${1:Things}; $2${3:++}) {
	  ${4:$1[$2]}
	};
snippet fi
	for (var ${2:x} in ${1:Object}) {
	  ${3}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
	  ${4:$1[$2]}
	};

# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
	  ${2:/* code */}
	}
# do...while
snippet do
	do {
	  ${2:/* code */}
	} while (${1:/* condition */});

# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};

# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}

snippet dd
	alert(${1});${2}
# firebug
snippet cl
	console.log(${1});${2}
snippet ct
	console.trace(${1});${2}
snippet cs
	console.assert(${1});${2}


snippet lm
	$(function(){
	  ${1}
	});

# jQuery
snippet re
	$(document).ready(function() {
	  ${1}
	});

snippet jq
	jQuery${1}

snippet pi
	(function($) {
	  ${1}
	})(jQuery);

snippet ea
	.each(function(${1})) {
	  ${2}
	});

# qunit
snippet test
	test('${1}', function() {
	  ${2}
	});
